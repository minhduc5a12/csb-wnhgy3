{"version":3,"sources":["Components/Header.js","Components/TodoList.js","Components/TodoInput.js","Components/TodoCard.js","App.js","index.js"],"names":["Header","ButtonStyled","styled","Button","textAlign","background","TodoList","todoList","CheckBtn","DeleteBtn","className","map","value","style","display","isDelete","onClick","id","disabled","isComplete","fullWidth","variant","endIcon","todo","color","memo","TODO_APP_KEY","TodoInput","TodoRef","useRef","useState","setTodo","setTodoList","useEffect","localStorage","getItem","JSON","parse","length","setItem","stringify","filter","ele","useCallback","prevState","tabIndex","maxLength","placeholder","autoFocus","ref","onChange","e","target","current","focus","v4","size","TodoCard","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.5a7f9e4d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <h1>TODO APP</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Fragment, memo } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport styled from '@emotion/styled';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\nconst ButtonStyled = styled(Button)({\r\n    textAlign: \"left\",\r\n    background: \"#6aa6e1\"\r\n});\r\nfunction TodoList({ todoList, CheckBtn, DeleteBtn }) {\r\n    return (\r\n        <Fragment>\r\n            <div className='List'>\r\n                {todoList.map(value => {\r\n                    return <div className='todo' style={{ display: value.isDelete ? \"none\" : \"flex\" }} key={value.id} onClick={() => {\r\n                        CheckBtn(value.id);\r\n                    }}>\r\n                        <ButtonStyled\r\n                            disabled={value.isComplete}\r\n                            fullWidth variant='contained'\r\n                            endIcon={value.isComplete && <CheckIcon />}>{value.todo}</ButtonStyled>\r\n                        <Button\r\n                            color={value.isComplete ? \"error\" : \"primary\"}\r\n                        >\r\n                            {!value.isComplete ? <CheckIcon onClick={() => {\r\n                                value.isComplete ? DeleteBtn(value.id) : CheckBtn(value.id);\r\n                            }} /> : <CloseIcon onClick={() => {\r\n                                value.isComplete ? DeleteBtn(value.id) : CheckBtn(value.id);\r\n                            }} />}\r\n                        </Button>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default memo(TodoList);","import React, {\r\n  Fragment,\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect\r\n} from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport TodoList from \"./TodoList\";\r\nimport { v4 } from \"uuid\";\r\nconst TODO_APP_KEY = \"TODO_APP\";\r\nfunction TodoInput() {\r\n  const arrayRemove = (arr, value) => {\r\n    return arr.filter((ele) => {\r\n      return ele.isDelete !== value;\r\n    });\r\n  };\r\n  const TodoRef = useRef(\"\");\r\n  const [todo, setTodo] = useState(\"\");\r\n  const [todoList, setTodoList] = useState([]);\r\n  useEffect(() => {\r\n    if (localStorage.getItem(TODO_APP_KEY)) {\r\n      setTodoList(JSON.parse(localStorage.getItem(TODO_APP_KEY)));\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    todoList.length >= 1\r\n      ? localStorage.setItem(\r\n          TODO_APP_KEY,\r\n          JSON.stringify(arrayRemove(todoList, true))\r\n        )\r\n      : \"\";\r\n  }, [todoList]);\r\n  const AddAction = () => {\r\n    TodoRef.current.focus();\r\n    setTodoList([\r\n      ...todoList,\r\n      {\r\n        todo: todo,\r\n        id: v4(),\r\n        isComplete: false,\r\n        isDelete: false\r\n      }\r\n    ]);\r\n    setTodo(\"\");\r\n  };\r\n  const CheckBtn = useCallback((id) => {\r\n    setTodoList((prevState) =>\r\n      prevState.map((todo) =>\r\n        todo.id === id ? { ...todo, isComplete: true } : todo\r\n      )\r\n    );\r\n  }, []);\r\n  const DeleteBtn = useCallback((id) => {\r\n    setTodoList((prevState) =>\r\n      prevState.map((todo) =>\r\n        todo.id === id ? { ...todo, isDelete: true } : todo\r\n      )\r\n    );\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"Box-add\">\r\n        <div className=\"Box-input\" tabIndex={1}>\r\n          <input\r\n            maxLength={25}\r\n            placeholder=\"Add a todo\"\r\n            autoFocus\r\n            ref={TodoRef}\r\n            onChange={(e) => {\r\n              setTodo(e.target.value);\r\n            }}\r\n            value={todo}\r\n          />\r\n        </div>\r\n        <div className=\"Box-btn\">\r\n          <Button\r\n            onClick={AddAction}\r\n            disabled={todo.length !== 0 && todo[0] !== \" \" ? false : true}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            <AddIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"List-container\">\r\n        <TodoList\r\n          todoList={todoList}\r\n          CheckBtn={CheckBtn}\r\n          DeleteBtn={DeleteBtn}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default TodoInput;\r\n","import React from 'react';\r\nimport TodoInput from './TodoInput';\r\nfunction TodoCard() {\r\n  return (\r\n    <main>\r\n      <TodoInput />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TodoCard;","import React, { Fragment } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Components/Header\";\nimport TodoCard from \"./Components/TodoCard\";\nfunction App() {\n  return (\n    <Fragment>\n      <Header />\n      <TodoCard />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}